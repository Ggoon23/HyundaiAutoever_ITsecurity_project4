events {
    worker_connections 1024;
}

http {
    # HTTP Request Smuggling을 위한 취약한 설정

    # 백엔드 연결 풀 설정
    upstream backend {
        server web:80;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;

        # 취약점 1: Transfer-Encoding과 Content-Length 모두 처리
        # Nginx는 Content-Length 우선, Apache는 Transfer-Encoding 우선 (CL.TE)

        # 취약점 2: HTTP/1.1 사용 및 Connection 재사용
        proxy_http_version 1.1;

        # 취약점 3: 잘못된 헤더 무시하지 않음
        ignore_invalid_headers off;

        # 백엔드 연결 재사용 (Request Smuggling 핵심)
        proxy_set_header Connection "";

        # 요청 버퍼 설정 (큰 요청 허용)
        client_body_buffer_size 128k;
        client_max_body_size 10m;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 중요: 모든 헤더 그대로 전달
            proxy_pass_request_headers on;

            # 타임아웃 설정 (긴 요청 허용)
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 버퍼링 비활성화 (실시간 전달)
            proxy_buffering off;
        }

        # 에러 로그 상세화
        error_log /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log;
    }
}
